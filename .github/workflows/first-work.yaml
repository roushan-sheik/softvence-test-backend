name: Deploy to EC2

on:
  push:
    branches: ["main"]

env:
  NODE_VERSION: "20.15.0"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if any)
        run: npm test || echo "No tests found"
        continue-on-error: false

      - name: Build application
        run: npm run build

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Create backup on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh $EC2_USER@$EC2_HOST << 'EOF'
            if [ -d ~/app ]; then
              cp -r ~/app ~/app_backup_$(date +%Y%m%d_%H%M%S)
              # Keep only last 3 backups
              ls -dt ~/app_backup_* | tail -n +4 | xargs rm -rf
            fi
          EOF

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh $EC2_USER@$EC2_HOST "mkdir -p ~/app"

          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.github' \
            --exclude='src' \
            --exclude='tsconfig.json' \
            --exclude='.env.example' \
            --include='dist/**' \
            --include='package*.json' \
            --include='.env' \
            . $EC2_USER@$EC2_HOST:~/app/

          ssh $EC2_USER@$EC2_HOST << 'EOF'
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            
            # Use consistent Node version
            nvm use 20.15.0 || nvm install 20.15.0
            
            cd ~/app
            
            # Install production dependencies
            npm ci --omit=dev
            
            # Ensure PM2 is installed
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
            
            # Graceful reload instead of restart
            pm2 reload nodejs-app || pm2 start dist/index.js --name nodejs-app
            pm2 save
          EOF

      - name: Health check
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          sleep 5
          curl -f http://${{ secrets.EC2_HOST }}:3000/health || exit 1

      - name: Rollback on failure
        if: failure()
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh $EC2_USER@$EC2_HOST << 'EOF'
            LATEST_BACKUP=$(ls -dt ~/app_backup_* | head -1)
            if [ -d "$LATEST_BACKUP" ]; then
              rm -rf ~/app
              cp -r $LATEST_BACKUP ~/app
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              nvm use 20.15.0
              cd ~/app
              pm2 restart nodejs-app
            fi
          EOF

      - name: Notify on success
        if: success()
        run: echo "Deployment successful!"

      - name: Notify on failure
        if: failure()
        run: echo "❌ Deployment failed and rolled back!"
