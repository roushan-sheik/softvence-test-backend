name: Deploy to EC2
on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.15
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          # Create deployment directory
          ssh $EC2_USER@$EC2_HOST "mkdir -p ~/app"

          # Copy built files to EC2
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.github' \
            --exclude='src' \
            --exclude='tsconfig.json' \
            --exclude='.env.example' \
            --include='dist/**' \
            --include='package*.json' \
            --include='.env' \
            . $EC2_USER@$EC2_HOST:~/app/

          # Install dependencies and restart application
          ssh $EC2_USER@$EC2_HOST << 'EOF'
            # Try multiple methods to load Node.js
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            
            # Try fnm
            if [ -d "$HOME/.local/share/fnm" ]; then
              export PATH="$HOME/.local/share/fnm:$PATH"
              eval "$(fnm env --use-on-cd)"
            fi
            
            # Add common node paths
            export PATH="$HOME/.nvm/versions/node/$(ls $HOME/.nvm/versions/node 2>/dev/null | tail -1)/bin:$PATH"
            export PATH="/run/user/1000/fnm_multishells/112424_1734077954807/bin:$PATH"
            
            cd ~/app
            
            # Verify node and npm are available
            which node || { echo "Node.js not found in PATH"; exit 1; }
            which npm || { echo "npm not found in PATH"; exit 1; }
            
            # Install production dependencies only
            npm ci --omit=dev
            
            # Restart with PM2
            pm2 delete nodejs-app 2>/dev/null || true
            pm2 start dist/index.js --name nodejs-app
            pm2 save
          EOF
